{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es2016",
    /* Modules */
    "module": "es2022" /* Specify what module code is generated. */,
    "rootDir": "." /* Specify the root folder within your source files. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "paths": {
      "types/*": ["types/*"],
      "keys/*": ["keys/*"],
      "utils/*": ["utils/*"],
      "services/*": ["services/*"],
      "graphql/*": ["functions/graphql/*"]
    },
    "typeRoots": [
      "node_modules/@types",
      "types"
    ],
    "resolveJsonModule": true /* Enable importing .json files. */,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "checkJs": true /* Enable error reporting in type-checked JavaScript files. */,

    /* Emit */
    "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    "newLine": "lf" /* Set the newline character for emitting files. */,
    "preserveConstEnums": true /* Disable erasing 'const enum' declarations in generated code. */,
    "preserveValueImports": true /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */,

    /* Interop Constraints */
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,

    /* Type Checking */
    "strict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
    "noPropertyAccessFromIndexSignature": true /* Enforces using indexed accessors for keys declared using an indexed type. */,
    "allowUnreachableCode": true /* Disable error reporting for unreachable code. */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": [
    "./**/*.ts",
    "./**/*.graphql",
    "./**/*.json"
  ],
  "files": [
    "types/generated.d.ts",
    "codegen.js"
  ],
  "exclude": [
    "node_modules",
    "types/*"
  ],
  "watchOptions": {
    "excludeDirectories": ["**/node_modules", "dist", ".serverless", ".webpack"]
  }
}
